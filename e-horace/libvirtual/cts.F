* cts.F
* this file is part of the process {MU, MD} -> {0, ME}
* generated by WriteSquaredME 7 Mar 2005 17:54

#include "prefix.h"
	subroutine cts
	implicit character (a-s,u-z)
	implicit double complex (t)
	double precision deltar	, deltarl, gwmw
	integer ifirst,ii
#include "vars.h"
	common/deltaerre/deltar
	common/ctsfirst/ifirst
	data ifirst/1/

	if (ifirst.eq.1) then
c	   print*,'WARNING '
c	   print*,'WARNING '
c	   print*,'WARNING in cts.F'
c	   do ii = 1,10
c	      print*,'dMWsq1 -> 0, preso da DK '
c	   enddo
c           print*,'dze',dze1
c           print*,'dsw1',dsw1
c           print*,'dmw2',dmwsq1
c           print*,'dzw',dzw1
c           print*,'dzf1',dZfL1(1,1,1)
c           print*,'dzf2',dZfL1(2,1,1)
c           print*,'dzf3',dZfL1(3,1,1)
c           print*,'dzf4',dZfL1(4,1,1)
	   ifirst = 0
	endif

	gwmw = gw*mw
	
	deltarl = deltar

        Cloop(1) = Cloop(1) +
c                             !---- ATTENZIONE 
     -   (-((2*Alfa*Pi)/SW2* 1.d0* dMWsq1) - (2*Alfa*MW2*Pi)/SW2*dZW1 + 
     -      (2*Alfa*Pi)/SW2*(dZW1*S))/(-MW2 + S)/
     -      (S-MW2+dcmplx(0d0,gwmw)) +  
     -   (-((4*Alfa*Pi)/SW2*dZe1) - (2*Alfa*Pi)/SW2*dZW1 + 
     -      (4*Alfa*Pi)/SW2*dSW1/SW - 
     -      (Alfa*Pi)/SW2*dconjg(dZfL1(1,1,1)) - 
     -      (Alfa*Pi)/SW2*dZfL1(2,1,1))/(S-MW2+dcmplx(0d0,gwmw))


	Cloop(1) = Cloop(1) +2.d0*Alfa*Pi/SW2*deltarl/
     -             (S-MW2+dcmplx(0d0,gwmw))

        Cloop(1) = Cloop(1) + 
     -   (-((Alfa*Pi)/SW2*dconjg(dZfL1(4,1,1))) - 
     -      (Alfa*Pi)/SW2*dZfL1(3,1,1))/(S-MW2+dcmplx(0d0,gwmw))

	Cloop(2) = Cloop(2)+(2*Alfa*ME*MU*Pi)/SW2*dZW1/(-MW2 + S)/
     -             (S-MW2+dcmplx(0d0,gwmw))

	Cloop(3) = Cloop(3)-(2*Alfa*MD*ME*Pi)/SW2*dZW1/(-MW2 + S)/
     -             (S-MW2+dcmplx(0d0,gwmw))

	end

