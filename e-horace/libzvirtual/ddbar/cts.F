* cts.F
* this file is part of the process {MD, MD} -> {MM, MM}
* generated by WriteSquaredME 3 Aug 2006 1:50

#include "prefix.h"

	subroutine ddcts
	implicit character (a-s,u-z)
	implicit double complex (t)
	integer ischeme
	double complex gzmz
	double precision deltar, pippo, ciccio, deltar0,dkl,dku,dkd
	double precision xsw2, dsw2,agfa

#include "vars.h"
        common/deltaerre/deltar0

	double precision dalpha,dalphaan,drho,drhoir1,drhoir12,rhofiu,rhofid
	common/feyhorflags/dalpha,dalphaan,drho,drhoir1,drhoir12,rhofiu,
     .     rhofid,dkl,dku,dkd,ischeme

	deltar = deltar0
	gzmz = dcmplx(0d0, gz*mz)

	tmp102 = dconjg(dZfL1(2,2,2)) + dconjg(dZfL1(4,1,1))

	tmp103 = dconjg(dZfL1(4,1,1)) + dconjg(dZfR1(2,2,2))

	tmp104 = dconjg(dZfL1(2,2,2)) + dconjg(dZfR1(4,1,1))

	tmp105 = dconjg(dZfR1(2,2,2)) + dconjg(dZfR1(4,1,1))

        Cloop(1) = Cloop(1) + 
     -   ((8*Alfa*Pi)/(3.D0*CW2)*dMZsq1 - 
     -      (Alfa*Pi)/(CW2*SW2)*dMZsq1 - 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW2)*dMZsq1 + 
     -      (8*Alfa*MZ2*Pi)/(3.D0*CW2)*dZZZ1 - 
     -      (Alfa*MZ2*Pi)/(CW2*SW2)*dZZZ1 + 
     -      S*(-((8*Alfa*Pi)/(3.D0*CW2)*dZZZ1) + 
     -         (Alfa*Pi)/(CW2*SW2)*dZZZ1 + 
     -         (4*Alfa*Pi*SW2)/(3.D0*CW2)*dZZZ1) - 
     -      (4*Alfa*MZ2*Pi*SW2)/(3.D0*CW2)*dZZZ1)/(-MZ2+gzmz + S)/(-MZ2 + S) + 
     -   (4*Alfa*Pi)/3.D0*dZAA1/S + 
     -   ((4*Alfa*MZ2*Pi)/(3.D0*CW)*dZZA1/SW + 
     -      S*(-((4*Alfa*Pi)/(3.D0*CW)*dZAZ1/SW) + 
     -         (4*Alfa*Pi*SW2)/(3.D0*CW)*dZAZ1/SW - 
     -         (4*Alfa*Pi)/(3.D0*CW)*dZZA1/SW + 
     -         (4*Alfa*Pi*SW2)/(3.D0*CW)*dZZA1/SW) - 
     -      (4*Alfa*MZ2*Pi*SW2)/(3.D0*CW)*dZZA1/SW)/(S*(-MZ2+gzmz + S)) + 
     -   (-((4*Alfa*Pi)/3.D0*dZAA1) - (8*Alfa*Pi)/3.D0*dZe1 + 
     -      (4*Alfa*Pi)/(3.D0*CW)*dZZA1/SW - 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW)*dZZA1/SW - 
     -      (2*Alfa*Pi)/3.D0*tmp102 - (2*Alfa*Pi)/3.D0*dZfL1(2,2,2) - 
     -      (2*Alfa*Pi)/3.D0*dZfL1(4,1,1))/S + 
     -   ((16*Alfa*Pi)/(3.D0*CW2)*dZe1 - 
     -      (2*Alfa*Pi)/(CW2*SW2)*dZe1 - 
     -      (8*Alfa*Pi*SW2)/(3.D0*CW2)*dZe1 + 
     -      (8*Alfa*Pi)/(3.D0*CW2)*dZZZ1 - 
     -      (Alfa*Pi)/(CW2*SW2)*dZZZ1 - 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW2)*dZZZ1 + 
     -      (2*Alfa*Pi)/(3.D0*CW2**2)*dSW1/SW - 
     -      (8*Alfa*Pi)/(3.D0*CW2)*dSW1/SW + 
     -      (2*Alfa*Pi)/(CW2*SW2)*dSW1/SW + 
     -      (4*Alfa*Pi)/(3.D0*CW)*dZAZ1/SW - 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW)*dZAZ1/SW + 
     -      ((4*Alfa*Pi)/(3.D0*CW2) - (Alfa*Pi)/(2.D0*CW2*SW2) - 
     -         (2*Alfa*Pi*SW2)/(3.D0*CW2))*tmp102 + 
     -      (4*Alfa*Pi)/(3.D0*CW2)*dZfL1(2,2,2) - 
     -      (Alfa*Pi)/(2.D0*CW2*SW2)*dZfL1(2,2,2) - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2)*dZfL1(2,2,2) + 
     -      (4*Alfa*Pi)/(3.D0*CW2)*dZfL1(4,1,1) - 
     -      (Alfa*Pi)/(2.D0*CW2*SW2)*dZfL1(4,1,1) - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2)*dZfL1(4,1,1))/(-MZ2+gzmz + S)

        Cloop(2) = Cloop(2) + 
     -   ((2*Alfa*Pi)/CW2*dMZsq1 - 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW2)*dMZsq1 + 
     -      (2*Alfa*MZ2*Pi)/CW2*dZZZ1 + 
     -      S*(-((2*Alfa*Pi)/CW2*dZZZ1) + 
     -         (4*Alfa*Pi*SW2)/(3.D0*CW2)*dZZZ1) - 
     -      (4*Alfa*MZ2*Pi*SW2)/(3.D0*CW2)*dZZZ1)/(-MZ2+gzmz + S)/(-MZ2 + S) + 
     -   (4*Alfa*Pi)/3.D0*dZAA1/S + 
     -   ((Alfa*MZ2*Pi)/CW*dZZA1/SW - 
     -      (2*Alfa*MZ2*Pi*SW2)/(3.D0*CW)*dZZA1/SW + 
     -      S*(-((Alfa*Pi)/CW*dZAZ1/SW) + 
     -         (2*Alfa*Pi*SW2)/(3.D0*CW)*dZAZ1/SW - 
     -         (Alfa*Pi)/CW*dZZA1/SW + 
     -         (2*Alfa*Pi*SW2)/(3.D0*CW)*dZZA1/SW + 
     -         (2*Alfa*Pi)/(3.D0*CW)*(dZAZ1*SW) + 
     -         (2*Alfa*Pi)/(3.D0*CW)*(dZZA1*SW)) - 
     -      (2*Alfa*MZ2*Pi)/(3.D0*CW)*(dZZA1*SW))/(S*(-MZ2+gzmz + S)) + 
     -   (-((4*Alfa*Pi)/3.D0*dZAA1) - (8*Alfa*Pi)/3.D0*dZe1 + 
     -      (Alfa*Pi)/CW*dZZA1/SW - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW)*dZZA1/SW - 
     -      (2*Alfa*Pi)/(3.D0*CW)*(dZZA1*SW) - 
     -      (2*Alfa*Pi)/3.D0*tmp103 - (2*Alfa*Pi)/3.D0*dZfL1(4,1,1) - 
     -      (2*Alfa*Pi)/3.D0*dZfR1(2,2,2))/S + 
     -   ((4*Alfa*Pi)/CW2*dZe1 - (8*Alfa*Pi*SW2)/(3.D0*CW2)*dZe1 + 
     -      (2*Alfa*Pi)/CW2*dZZZ1 - 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW2)*dZZZ1 + 
     -      (2*Alfa*Pi)/CW2**2*dSW1/SW - (2*Alfa*Pi)/CW2*dSW1/SW + 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2**2)*dSW1/SW + 
     -      (Alfa*Pi)/CW*dZAZ1/SW - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW)*dZAZ1/SW - 
     -      (4*Alfa*Pi)/(3.D0*CW2**2)*(dSW1*SW) - 
     -      (2*Alfa*Pi)/(3.D0*CW)*(dZAZ1*SW) + 
     -      ((Alfa*Pi)/CW2 - (2*Alfa*Pi*SW2)/(3.D0*CW2))*tmp103 + 
     -      (Alfa*Pi)/CW2*dZfL1(4,1,1) - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2)*dZfL1(4,1,1) + 
     -      (Alfa*Pi)/CW2*dZfR1(2,2,2) - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2)*dZfR1(2,2,2))/(-MZ2+gzmz + S)

        Cloop(3) = Cloop(3) + 
     -   ((2*Alfa*Pi)/(3.D0*CW2)*dMZsq1 - 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW2)*dMZsq1 + 
     -      (2*Alfa*MZ2*Pi)/(3.D0*CW2)*dZZZ1 + 
     -      S*(-((2*Alfa*Pi)/(3.D0*CW2)*dZZZ1) + 
     -         (4*Alfa*Pi*SW2)/(3.D0*CW2)*dZZZ1) - 
     -      (4*Alfa*MZ2*Pi*SW2)/(3.D0*CW2)*dZZZ1)/(-MZ2+gzmz + S)/(-MZ2 + S) + 
     -   (4*Alfa*Pi)/3.D0*dZAA1/S + 
     -   ((Alfa*MZ2*Pi)/(3.D0*CW)*dZZA1/SW - 
     -      (2*Alfa*MZ2*Pi*SW2)/(3.D0*CW)*dZZA1/SW + 
     -      S*(-((Alfa*Pi)/(3.D0*CW)*dZAZ1/SW) + 
     -         (2*Alfa*Pi*SW2)/(3.D0*CW)*dZAZ1/SW - 
     -         (Alfa*Pi)/(3.D0*CW)*dZZA1/SW + 
     -         (2*Alfa*Pi*SW2)/(3.D0*CW)*dZZA1/SW + 
     -         (2*Alfa*Pi)/(3.D0*CW)*(dZAZ1*SW) + 
     -         (2*Alfa*Pi)/(3.D0*CW)*(dZZA1*SW)) - 
     -      (2*Alfa*MZ2*Pi)/(3.D0*CW)*(dZZA1*SW))/(S*(-MZ2+gzmz + S)) + 
     -   (-((4*Alfa*Pi)/3.D0*dZAA1) - (8*Alfa*Pi)/3.D0*dZe1 + 
     -      (Alfa*Pi)/(3.D0*CW)*dZZA1/SW - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW)*dZZA1/SW - 
     -      (2*Alfa*Pi)/(3.D0*CW)*(dZZA1*SW) - 
     -      (2*Alfa*Pi)/3.D0*tmp104 - (2*Alfa*Pi)/3.D0*dZfL1(2,2,2) - 
     -      (2*Alfa*Pi)/3.D0*dZfR1(4,1,1))/S + 
     -   ((4*Alfa*Pi)/(3.D0*CW2)*dZe1 - 
     -      (8*Alfa*Pi*SW2)/(3.D0*CW2)*dZe1 + 
     -      (2*Alfa*Pi)/(3.D0*CW2)*dZZZ1 - 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW2)*dZZZ1 + 
     -      (2*Alfa*Pi)/(3.D0*CW2**2)*dSW1/SW - 
     -      (2*Alfa*Pi)/(3.D0*CW2)*dSW1/SW - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2**2)*dSW1/SW + 
     -      (Alfa*Pi)/(3.D0*CW)*dZAZ1/SW - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW)*dZAZ1/SW - 
     -      (4*Alfa*Pi)/(3.D0*CW2**2)*(dSW1*SW) - 
     -      (2*Alfa*Pi)/(3.D0*CW)*(dZAZ1*SW) + 
     -      ((Alfa*Pi)/(3.D0*CW2) - (2*Alfa*Pi*SW2)/(3.D0*CW2))*
     -       tmp104 + (Alfa*Pi)/(3.D0*CW2)*dZfL1(2,2,2) - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2)*dZfL1(2,2,2) + 
     -      (Alfa*Pi)/(3.D0*CW2)*dZfR1(4,1,1) - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2)*dZfR1(4,1,1))/(-MZ2+gzmz + S)

        Cloop(4) = Cloop(4) + (4*Alfa*Pi)/3.D0*dZAA1/S + 
     -   (-((4*Alfa*Pi*SW2)/(3.D0*CW2)*dMZsq1) - 
     -      (4*Alfa*MZ2*Pi*SW2)/(3.D0*CW2)*dZZZ1 + 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW2)*(dZZZ1*S))/(-MZ2+gzmz + S)/(-MZ2 + S) + 
     -   (S*((4*Alfa*Pi)/(3.D0*CW)*(dZAZ1*SW) + 
     -         (4*Alfa*Pi)/(3.D0*CW)*(dZZA1*SW)) - 
     -      (4*Alfa*MZ2*Pi)/(3.D0*CW)*(dZZA1*SW))/(S*(-MZ2+gzmz + S)) + 
     -   (-((4*Alfa*Pi)/3.D0*dZAA1) - (8*Alfa*Pi)/3.D0*dZe1 - 
     -      (4*Alfa*Pi)/(3.D0*CW)*(dZZA1*SW) - 
     -      (2*Alfa*Pi)/3.D0*tmp105 - (2*Alfa*Pi)/3.D0*dZfR1(2,2,2) - 
     -      (2*Alfa*Pi)/3.D0*dZfR1(4,1,1))/S + 
     -   (-((8*Alfa*Pi*SW2)/(3.D0*CW2)*dZe1) - 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW2)*dZZZ1 - 
     -      (8*Alfa*Pi)/(3.D0*CW2**2)*(dSW1*SW) - 
     -      (4*Alfa*Pi)/(3.D0*CW)*(dZAZ1*SW) - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2)*tmp105 - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2)*dZfR1(2,2,2) - 
     -      (2*Alfa*Pi*SW2)/(3.D0*CW2)*dZfR1(4,1,1))/(-MZ2+gzmz + S)

        Cloop(5) = Cloop(5) + 
     -   (Alfa*MD*MM*Pi)/(CW2*SW2)*dZZZ1/(-MZ2+gzmz + S)/(-MZ2 + S)

        Cloop(6) = Cloop(6) - 
     -   (Alfa*MD*MM*Pi)/(CW2*SW2)*dZZZ1/(-MZ2+gzmz + S)/(-MZ2 + S)

        Cloop(7) = Cloop(7) - 
     -   (Alfa*MD*MM*Pi)/(CW2*SW2)*dZZZ1/(-MZ2+gzmz + S)/(-MZ2 + S)

        Cloop(8) = Cloop(8) + 
     -   (Alfa*MD*MM*Pi)/(CW2*SW2)*dZZZ1/(-MZ2+gzmz + S)/(-MZ2 + S)


	if (ischeme.ge.1) then

  	   xsw2 = sw2

	   agfa = sw2*cw2/Alfa/Pi*sqrt(2.d0)*GF*mz*mz

	   pippo  = -dalphaan
	   ciccio = agfa*(-drhoir1 - (rhofid - 1.d0)-deltar)

	   if (ischeme.eq.1) then
c	      ciccio =-deltar*sw2*cw2/Alfa/Pi*sqrt(2.d0)*GF*mz*mz
	      ! i.e. -deltar * alpha_gf/alpha

	      ciccio = -deltar
	      
c	      print*,deltar,1.d0/alfa,sw2*cw2/Alfa/Pi*sqrt(2.d0)*GF*mz*mz

	      pippo  = ciccio
	   endif
	      
        Cloop(1) = Cloop(1) - (4*Alfa*Pi)/3.D0/S*pippo + 
     -   ((8*Alfa*Pi)/(3.D0*CW2) - (Alfa*Pi)/(CW2*SW2) - 
     -      (4*Alfa*Pi*SW2)/(3.D0*CW2))/(-MZ2+gzmz + S)*ciccio

        Cloop(2) = Cloop(2) - (4*Alfa*Pi)/3.D0/S*pippo + 
     -   ((2*Alfa*Pi)/CW2 - (4*Alfa*Pi*SW2)/(3.D0*CW2))/(-MZ2+gzmz + S)*ciccio

        Cloop(3) = Cloop(3) - (4*Alfa*Pi)/3.D0/S*pippo + 
     -   ((2*Alfa*Pi)/(3.D0*CW2) - (4*Alfa*Pi*SW2)/(3.D0*CW2))/
     -    (-MZ2+gzmz + S)*ciccio

        Cloop(4) = Cloop(4) - (4*Alfa*Pi)/3.D0/S*pippo - 
     -   (4*Alfa*Pi*SW2)/(3.D0*CW2)/(-MZ2+gzmz + S)*ciccio

	  Cloop(1) = Cloop(1) + sqrt(2.d0)*gf*mz2*((-2.d0*dkl-2.d0/3.d0*dkd)*sw2+4.d0/3.d0*sw2*sw2*(dkl+dkd) )/
     -                (-MZ2+gzmz + S)

	  Cloop(2) = Cloop(2) + sqrt(2.d0)*gf*mz2*(-2.d0*dkl*sw2+4.d0/3.d0*sw2*sw2*(dkl+dkd))/
     -                (-MZ2+gzmz + S)

	  Cloop(3) = Cloop(3) + sqrt(2.d0)*gf*mz2*(-2.d0/3.d0*sw2*dkd+4.d0/3.d0*sw2*sw2*(dkl+dkd))/
     -                (-MZ2+gzmz + S)

	  Cloop(4) = Cloop(4) + sqrt(2.d0)*gf*mz2*(4.d0/3.d0*sw2*sw2*(dkl+dkd))/(-MZ2+gzmz + S)

	endif
	end
