* born.F
* this file is part of the process {MU, MU} -> {MM, MM}
* generated by WriteSquaredME 24 Jul 2006 0:59

#include "prefix.h"

	subroutine uuborn
	implicit character (a-s,u-z)
	implicit double complex (t)
	integer ischeme
        double complex gzmz
	double precision minnie,zeta,xsw2,dkl,dku,dkd

#include "vars.h"

	double precision dalpha,dalphaan,drho,drhoir1,drhoir12,rhofiu,rhofid
	common/feyhorflags/dalpha,dalphaan,drho,drhoir1,drhoir12,rhofiu,
     .     rhofid,dkl,dku,dkd,ischeme

        gzmz = dcmplx(0d0,gz*mz)
	minnie = 1d0
	zeta = 1d0

c	xsw2 = sw2
c	if (ischeme.eq.2) then
c	   minnie = 1d0
c	   zeta = CW2/Alfa/Pi*sqrt(2d0)*gf*MZ2*xsw2
cc	   zeta = zeta/(1-drho)
c	end if


c	print*,sqrt(MZ2),1.d0/Alfa,SW2,gz,MZ

        Ctree(1) = Ctree(1) + (8*Alfa*Pi)/3.D0/S*minnie + 
     -   ((-10*Alfa*Pi)/(3.D0*CW2) + (Alfa*Pi)/(CW2*SW2) + 
     -      (8*Alfa*Pi*SW2)/(3.D0*CW2))/(-MZ2+gzmz + S)*zeta

        Ctree(2) = Ctree(2) + (8*Alfa*Pi)/3.D0/S*minnie + 
     -   ((-2*Alfa*Pi)/CW2 + (8*Alfa*Pi*SW2)/(3.D0*CW2))/(-MZ2+gzmz + S)*zeta

        Ctree(3) = Ctree(3) + (8*Alfa*Pi)/3.D0/S*minnie + 
     -   ((-4*Alfa*Pi)/(3.D0*CW2) + (8*Alfa*Pi*SW2)/(3.D0*CW2))/
     -    (-MZ2+gzmz + S)*zeta

        Ctree(4) = Ctree(4) + (8*Alfa*Pi)/3.D0/S*minnie + 
     -   (8*Alfa*Pi*SW2)/(3.D0*CW2)/(-MZ2+gzmz + S)*zeta

	end

